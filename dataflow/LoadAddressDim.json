{
	"name": "LoadAddressDim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "AustinSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "ChicagoSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "NycSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "MontgomerySTG"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "AustinDIM"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "ChicagoDIM"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "NYCDIM"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "MONTDIM"
				}
			],
			"transformations": [
				{
					"name": "selectTX"
				},
				{
					"name": "selectIL"
				},
				{
					"name": "selectNYC"
				},
				{
					"name": "selectMO"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "filter4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CRASH_ID as string,",
				"          CRASH_FATAL_FL as string,",
				"          CASE_ID as string,",
				"          STREET_ADDRESS as string,",
				"          CRASH_SPEED_LIMIT as decimal(38,0),",
				"          ROAD_CONSTR_ZONE_FL as string,",
				"          LATITUDE as decimal(10,7),",
				"          LONGITUDE as decimal(10,7),",
				"          CRASH_SEV_ID as decimal(38,0),",
				"          TOT_INJRY_CNT as decimal(38,0),",
				"          DEATH_CNT as decimal(38,0),",
				"          UNITS_INVOLVED as string,",
				"          VEHICLE_TYPE as string,",
				"          POINT as string,",
				"          MOTOR_VEHICLE_DEATH_COUNT as decimal(38,0),",
				"          MOTOR_VEHICLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          BICYCLE_DEATH_COUNT as decimal(38,0),",
				"          BICYCLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          PEDESTRIAN_DEATH_COUNT as decimal(38,0),",
				"          PEDESTRIAN_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          MOTORCYCLE_DEATH_COUNT as decimal(38,0),",
				"          MOTORCYCLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          OTHER_DEATH_COUNT as decimal(38,0),",
				"          OTHER_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          ONSYS_FL as string,",
				"          PRIVATE_DR_FL as string,",
				"          MICROMOBILITY_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          MICROMOBILITY_DEATH_COUNT as decimal(38,0),",
				"          CRASH_DATE as string,",
				"          CRASH_TIME as string,",
				"          CRASH_TIMESTAMP as timestamp,",
				"          IS_DELETED as string,",
				"          IS_TEMPORARY_RECORD as string,",
				"          LAW_ENFORCEMENT_FATALITY_COUNT as decimal(38,0),",
				"          REPORTED_STREET_PREFIX as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_WORKFLOW_NAME as string,",
				"          CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> AustinSTG",
				"source(output(",
				"          CRASH_RECORD_ID as string,",
				"          CRASH_DATE as timestamp,",
				"          CRASH_TIME as string,",
				"          PRIM_CONTRIBUTORY_CAUSE as string,",
				"          SEC_CONTRIBUTORY_CAUSE as string,",
				"          STREET_NAME as string,",
				"          INJURIES_TOTAL as decimal(38,0),",
				"          INJURIES_FATAL as decimal(38,0),",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          CONTRIBUTORY_FACTOR as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_SOURCE_NAME as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ChicagoSTG",
				"source(output(",
				"          STREET_NAME as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          CITY as string,",
				"          COUNTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'Select distinct STREET_NAME, LATITUDE, LONGITUDE, CITY, COUNTRY from stg_nyc_v2 WHERE STREET_NAME IS NOT NULL',",
				"     format: 'query') ~> NycSTG",
				"source(output(",
				"          REPORT_NUMBER as string,",
				"          LOCAL_CASE_NUMBER as string,",
				"          CRASH_DATE as timestamp,",
				"          CRASH_TIME as string,",
				"          STREET_NAME as string,",
				"          CONTRIBUTORY_FACTOR as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          LOCATION as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_SOURCE_NAME as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> MontgomerySTG",
				"AustinSTG select(mapColumn(",
				"          STREET_ADDRESS,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          COUNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectTX",
				"ChicagoSTG select(mapColumn(",
				"          STREET_NAME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          COUNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectIL",
				"NycSTG select(mapColumn(",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          STREET_NAME,",
				"          CITY,",
				"          COUNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectNYC",
				"MontgomerySTG select(mapColumn(",
				"          STREET_NAME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          LOCATION,",
				"          CITY,",
				"          COUNTRY",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectMO",
				"selectTX derive(STREET_ADDRESS = trim(STREET_ADDRESS),",
				"          LATITUDE = toFloat(LATITUDE),",
				"          LONGITUDE = toFloat(LONGITUDE),",
				"          CITY = trim(CITY),",
				"          COUNTRY = trim(COUNTRY),",
				"          di_create_date = currentDate(),",
				"          di_workflow = 'Address_Integration_Workflow') ~> derivedColumn1",
				"selectIL derive(STREET_NAME = trim(STREET_NAME),",
				"          CITY = trim(CITY),",
				"          COUNTRY = trim(COUNTRY),",
				"          LATITUDE = toFloat(LATITUDE),",
				"          LONGITUDE = toFloat(LONGITUDE),",
				"          di_create_dt = currentDate(),",
				"          di_workflow = 'Address_Integration_Workflow') ~> derivedColumn2",
				"selectNYC derive(STREET_NAME = trim(STREET_NAME),",
				"          LATITUDE = toFloat(LATITUDE),",
				"          LONGITUDE = toFloat(LONGITUDE),",
				"          CITY = trim(CITY),",
				"          COUNTRY = trim(COUNTRY),",
				"          di_create_dt = currentDate(),",
				"          di_workflow = 'Address_Integration_Workflow') ~> derivedColumn3",
				"selectMO derive(COUNTRY = trim(upper(COUNTRY)),",
				"          CITY = trim(upper(CITY)),",
				"          LATITUDE = toFloat(LATITUDE),",
				"          STREET_ADDRESS = upper(trim(STREET_NAME)),",
				"          LONGITUDE = toFloat(LONGITUDE),",
				"          di_create_dt = currentDate(),",
				"          di_workflow = 'Address_Integration_Workflow') ~> derivedColumn4",
				"derivedColumn2 filter(!isNull(STREET_NAME)) ~> filter1",
				"derivedColumn1 filter(!isNull(STREET_ADDRESS)) ~> filter2",
				"derivedColumn4 filter(!isNull(STREET_NAME)) ~> filter4",
				"filter2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          STREET_NAME = STREET_ADDRESS,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          COUNTRY,",
				"          DI_CREATED_DT = di_create_date,",
				"          DI_WORKFLOW_NAME = di_workflow",
				"     )) ~> AustinDIM",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          STREET_NAME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          COUNTRY,",
				"          DI_CREATED_DT = di_create_dt,",
				"          DI_WORKFLOW_NAME = di_workflow",
				"     )) ~> ChicagoDIM",
				"derivedColumn3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 3,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          STREET_NAME,",
				"          CITY,",
				"          COUNTRY,",
				"          DI_CREATED_DT = di_create_dt,",
				"          DI_WORKFLOW_NAME = di_workflow",
				"     )) ~> NYCDIM",
				"filter4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 4,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          STREET_NAME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          COUNTRY,",
				"          DI_CREATED_DT = di_create_dt,",
				"          DI_WORKFLOW_NAME = di_workflow",
				"     )) ~> MONTDIM"
			]
		}
	}
}