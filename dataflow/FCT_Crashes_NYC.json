{
	"name": "FCT_Crashes_NYC",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "NYCSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "AustinSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "ChicagoSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "MONSTG"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "DIMDate"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "DIMTime"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "DIMAddress"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "DIMVehicleType"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "DIMContrib"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeStagiing",
						"type": "DatasetReference"
					},
					"name": "FCTCrashes"
				}
			],
			"transformations": [
				{
					"name": "selectNYC"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "join5"
				}
			],
			"scriptLines": [
				"source(output(",
				"          COLLISION_ID as string,",
				"          CRASH_DATE as date,",
				"          CRASH_TIME as string,",
				"          CRASH_DATETIME as timestamp,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          STREET_NAME as string,",
				"          ZIP_CODE as string,",
				"          NUMBER_OF_PEDESTRIANS_KILLED as decimal(38,0),",
				"          NUMBER_OF_PEDESTRIANS_INJURED as decimal(38,0),",
				"          NUMBER_OF_PERSONS_INJURED as decimal(38,0),",
				"          NUMBER_OF_CYCLIST_INJURED as decimal(38,0),",
				"          NUMBER_OF_MOTORIST_INJURED as decimal(38,0),",
				"          NUMBER_OF_MOTORIST_KILLED as decimal(38,0),",
				"          NUMBER_OF_PERSONS_KILLED as decimal(38,0),",
				"          NUMBER_OF_CYCLIST_KILLED as decimal(38,0),",
				"          PEDESTRIAN_FLAG as decimal(38,0),",
				"          TOT_INJRY_CNT as decimal(38,0),",
				"          MOTORIST_INJRY_OR_KILLED_CNT as decimal(38,0),",
				"          TOT_FATAL_CNT as decimal(38,0),",
				"          CONTRIBUTING_FACTOR_VEHICLE as string,",
				"          VEHICLE_TYPE_CODE as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_WORKFLOW_FILENAME as string,",
				"          DI_CREATEDDATE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> NYCSTG",
				"source(output(",
				"          CRASH_ID as string,",
				"          CRASH_FATAL_FL as string,",
				"          CASE_ID as string,",
				"          STREET_ADDRESS as string,",
				"          CRASH_SPEED_LIMIT as decimal(38,0),",
				"          ROAD_CONSTR_ZONE_FL as string,",
				"          LATITUDE as decimal(10,7),",
				"          LONGITUDE as decimal(10,7),",
				"          CRASH_SEV_ID as decimal(38,0),",
				"          TOT_INJRY_CNT as decimal(38,0),",
				"          DEATH_CNT as decimal(38,0),",
				"          UNITS_INVOLVED as string,",
				"          VEHICLE_TYPE as string,",
				"          POINT as string,",
				"          MOTOR_VEHICLE_DEATH_COUNT as decimal(38,0),",
				"          MOTOR_VEHICLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          BICYCLE_DEATH_COUNT as decimal(38,0),",
				"          BICYCLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          PEDESTRIAN_DEATH_COUNT as decimal(38,0),",
				"          PEDESTRIAN_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          MOTORCYCLE_DEATH_COUNT as decimal(38,0),",
				"          MOTORCYCLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          OTHER_DEATH_COUNT as decimal(38,0),",
				"          OTHER_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          ONSYS_FL as string,",
				"          PRIVATE_DR_FL as string,",
				"          MICROMOBILITY_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          MICROMOBILITY_DEATH_COUNT as decimal(38,0),",
				"          CRASH_DATE as string,",
				"          CRASH_TIME as string,",
				"          CRASH_TIMESTAMP as timestamp,",
				"          IS_DELETED as string,",
				"          IS_TEMPORARY_RECORD as string,",
				"          LAW_ENFORCEMENT_FATALITY_COUNT as decimal(38,0),",
				"          REPORTED_STREET_PREFIX as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_WORKFLOW_NAME as string,",
				"          CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> AustinSTG",
				"source(output(",
				"          CRASH_RECORD_ID as string,",
				"          CRASH_DATE as timestamp,",
				"          CRASH_TIME as string,",
				"          PRIM_CONTRIBUTORY_CAUSE as string,",
				"          SEC_CONTRIBUTORY_CAUSE as string,",
				"          STREET_NAME as string,",
				"          INJURIES_TOTAL as decimal(38,0),",
				"          INJURIES_FATAL as decimal(38,0),",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          CONTRIBUTORY_FACTOR as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_SOURCE_NAME as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> ChicagoSTG",
				"source(output(",
				"          REPORT_NUMBER as string,",
				"          LOCAL_CASE_NUMBER as string,",
				"          CRASH_DATE as timestamp,",
				"          CRASH_TIME as string,",
				"          STREET_NAME as string,",
				"          CONTRIBUTORY_FACTOR as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          LOCATION as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_SOURCE_NAME as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> MONSTG",
				"source(output(",
				"          DATE_SK as decimal(38,0),",
				"          DATE as date,",
				"          DATE_IN_WORDS as string,",
				"          DAY_OF_MONTH as decimal(38,0),",
				"          MONTH as string,",
				"          MONTH_OF_YEAR as string,",
				"          YEAR as decimal(38,0),",
				"          DAY_OF_WEEK as decimal(38,0),",
				"          SEASON as string,",
				"          WEEKEND_INDICATOR as string,",
				"          DI_CREATED_DT as timestamp,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DIMDate",
				"source(output(",
				"          TIME_SK as decimal(38,0),",
				"          TIME as string,",
				"          HOUR as decimal(38,0),",
				"          MINUTE as decimal(38,0),",
				"          AM_OR_PM as string,",
				"          TIME_CATEGORY as string,",
				"          DI_CREATED_DT as timestamp,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DIMTime",
				"source(output(",
				"          ADDRESS_SK as decimal(38,0),",
				"          STREET_NAME as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          DI_WORKFLOW_NAME as string,",
				"          DI_CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DIMAddress",
				"source(output(",
				"          VEHICLE_SK as decimal(38,0),",
				"          VEHICLE_TYPE as string,",
				"          DI_CREATED_DT as date,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DIMVehicleType",
				"source(output(",
				"          DIM_CONTRIB_SK as decimal(38,0),",
				"          CONTRIBUTION as string,",
				"          CODE as decimal(38,0),",
				"          AUSTIN as string,",
				"          CHICAGO as string,",
				"          NEWYORK as string,",
				"          MONTGOMERY as string,",
				"          IS_ACTIVE as decimal(38,0),",
				"          SCD_VERSION as decimal(38,0),",
				"          LOADED_TIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> DIMContrib",
				"NYCSTG select(mapColumn(",
				"          COLLISION_ID,",
				"          CRASH_DATE,",
				"          CRASH_TIME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          STREET_NAME,",
				"          NUMBER_OF_PEDESTRIANS_KILLED,",
				"          NUMBER_OF_PEDESTRIANS_INJURED,",
				"          NUMBER_OF_PERSONS_INJURED,",
				"          NUMBER_OF_CYCLIST_INJURED,",
				"          NUMBER_OF_MOTORIST_INJURED,",
				"          NUMBER_OF_MOTORIST_KILLED,",
				"          NUMBER_OF_PERSONS_KILLED,",
				"          NUMBER_OF_CYCLIST_KILLED,",
				"          PEDESTRIAN_FLAG,",
				"          TOT_INJRY_CNT,",
				"          MOTORIST_INJRY_OR_KILLED_CNT,",
				"          TOT_FATAL_CNT,",
				"          CONTRIBUTING_FACTOR_VEHICLE,",
				"          VEHICLE_TYPE_CODE,",
				"          CITY,",
				"          COUNTRY,",
				"          DI_WORKFLOW_FILENAME,",
				"          DI_CREATEDDATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectNYC",
				"selectNYC, DIMAddress join(selectNYC@LATITUDE == DIMAddress@LATITUDE",
				"     && selectNYC@LONGITUDE == DIMAddress@LONGITUDE",
				"     && trim(selectNYC@STREET_NAME) == trim(DIMAddress@STREET_NAME),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, DIMVehicleType join(trim(VEHICLE_TYPE_CODE) == trim(VEHICLE_TYPE),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, DIMDate join(CRASH_DATE == DATE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3, DIMTime join(CRASH_TIME == TIME,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join4, DIMContrib join(upper(trim(CONTRIBUTING_FACTOR_VEHICLE)) == upper(trim(CONTRIBUTION)),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join5",
				"join5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> FCTCrashes"
			]
		}
	}
}