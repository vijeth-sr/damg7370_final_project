{
	"name": "wf_stage_chicago_raw",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_chicago_raw",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "stage_chicago_v1",
						"type": "DatasetReference"
					},
					"name": "dsstgchicago"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_WORKFLOW_NAME as string (\"mittul_adf\")",
				"}",
				"source(output(",
				"          CRASH_RECORD_ID as string,",
				"          CRASH_DATE_EST_I as string,",
				"          CRASH_DATE as string,",
				"          POSTED_SPEED_LIMIT as integer,",
				"          TRAFFIC_CONTROL_DEVICE as string,",
				"          DEVICE_CONDITION as string,",
				"          WEATHER_CONDITION as string,",
				"          LIGHTING_CONDITION as string,",
				"          FIRST_CRASH_TYPE as string,",
				"          TRAFFICWAY_TYPE as string,",
				"          LANE_CNT as integer,",
				"          ALIGNMENT as string,",
				"          ROADWAY_SURFACE_COND as string,",
				"          ROAD_DEFECT as string,",
				"          REPORT_TYPE as string,",
				"          CRASH_TYPE as string,",
				"          INTERSECTION_RELATED_I as string,",
				"          NOT_RIGHT_OF_WAY_I as string,",
				"          HIT_AND_RUN_I as string,",
				"          DAMAGE as string,",
				"          DATE_POLICE_NOTIFIED as string,",
				"          PRIM_CONTRIBUTORY_CAUSE as string,",
				"          SEC_CONTRIBUTORY_CAUSE as string,",
				"          STREET_NO as short,",
				"          STREET_DIRECTION as string,",
				"          STREET_NAME as string,",
				"          BEAT_OF_OCCURRENCE as integer,",
				"          PHOTOS_TAKEN_I as string,",
				"          STATEMENTS_TAKEN_I as string,",
				"          DOORING_I as boolean,",
				"          WORK_ZONE_I as string,",
				"          WORK_ZONE_TYPE as string,",
				"          WORKERS_PRESENT_I as string,",
				"          NUM_UNITS as short,",
				"          MOST_SEVERE_INJURY as string,",
				"          INJURIES_TOTAL as integer,",
				"          INJURIES_FATAL as integer,",
				"          INJURIES_INCAPACITATING as integer,",
				"          INJURIES_NON_INCAPACITATING as integer,",
				"          INJURIES_REPORTED_NOT_EVIDENT as integer,",
				"          INJURIES_NO_INDICATION as short,",
				"          INJURIES_UNKNOWN as integer,",
				"          CRASH_HOUR as short,",
				"          CRASH_DAY_OF_WEEK as short,",
				"          CRASH_MONTH as short,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          LOCATION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(CITY = \"CHICAGO\",",
				"          COUNTRY = \"UNITED STATES\",",
				"          DI_SOURCE_NAME = \"STG_CHICAGO\",",
				"          DI_CREATED_DATE = toString(currentDate(), 'yyyy-MM-dd'),",
				"          DI_WORKFLOW_NAME = $DI_WORKFLOW_NAME,",
				"          CRASH_DATE = toTimestamp(CRASH_DATE, 'MM/dd/yyyy hh:mm:ss a'),",
				"          DATE_POLICE_NOTIFIED = toTimestamp(DATE_POLICE_NOTIFIED, 'MM/dd/yyyy hh:mm:ss a')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CRASH_RECORD_ID as string,",
				"          CRASH_DATE_EST_I as string,",
				"          CRASH_DATE as string,",
				"          POSTED_SPEED_LIMIT as string,",
				"          TRAFFIC_CONTROL_DEVICE as string,",
				"          DEVICE_CONDITION as string,",
				"          WEATHER_CONDITION as string,",
				"          LIGHTING_CONDITION as string,",
				"          FIRST_CRASH_TYPE as string,",
				"          TRAFFICWAY_TYPE as string,",
				"          LANE_CNT as string,",
				"          ALIGNMENT as string,",
				"          ROADWAY_SURFACE_COND as string,",
				"          ROAD_DEFECT as string,",
				"          REPORT_TYPE as string,",
				"          CRASH_TYPE as string,",
				"          INTERSECTION_RELATED_I as string,",
				"          NOT_RIGHT_OF_WAY_I as string,",
				"          HIT_AND_RUN_I as string,",
				"          DAMAGE as string,",
				"          DATE_POLICE_NOTIFIED as string,",
				"          PRIM_CONTRIBUTORY_CAUSE as string,",
				"          SEC_CONTRIBUTORY_CAUSE as string,",
				"          STREET_NO as string,",
				"          STREET_DIRECTION as string,",
				"          STREET_NAME as string,",
				"          BEAT_OF_OCCURRENCE as string,",
				"          PHOTOS_TAKEN_I as string,",
				"          STATEMENTS_TAKEN_I as string,",
				"          DOORING_I as string,",
				"          WORK_ZONE_I as string,",
				"          WORK_ZONE_TYPE as string,",
				"          WORKERS_PRESENT_I as string,",
				"          NUM_UNITS as string,",
				"          MOST_SEVERE_INJURY as string,",
				"          INJURIES_TOTAL as string,",
				"          INJURIES_FATAL as string,",
				"          INJURIES_INCAPACITATING as string,",
				"          INJURIES_NON_INCAPACITATING as string,",
				"          INJURIES_REPORTED_NOT_EVIDENT as string,",
				"          INJURIES_NO_INDICATION as string,",
				"          INJURIES_UNKNOWN as string,",
				"          CRASH_HOUR as string,",
				"          CRASH_DAY_OF_WEEK as string,",
				"          CRASH_MONTH as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          LOCATION as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_SOURCE_NAME as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     )) ~> dsstgchicago"
			]
		}
	}
}