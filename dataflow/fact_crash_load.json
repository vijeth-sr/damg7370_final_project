{
	"name": "fact_crash_load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_austin_stg_v2",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable_CRASH_FACT",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CRASH_ID as string,",
				"          crash_fatal_fl as string,",
				"          case_id as string,",
				"          street_name as string,",
				"          rpt_block_num as string,",
				"          rpt_street_name as string,",
				"          rpt_street_sfx as string,",
				"          crash_speed_limit as string,",
				"          road_constr_zone_fl as string,",
				"          latitude as string,",
				"          longitude as string,",
				"          crash_sev_id as string,",
				"          sus_serious_injry_cnt as string,",
				"          nonincap_injry_cnt as string,",
				"          poss_injry_cnt as string,",
				"          non_injry_cnt as string,",
				"          unkn_injry_cnt as string,",
				"          tot_injry_cnt as string,",
				"          death_cnt as string,",
				"          units_involved as string,",
				"          point as string,",
				"          motor_vehicle_death_count as string,",
				"          motor_vehicle_serious_injury_count as string,",
				"          bicycle_death_count as string,",
				"          bicycle_serious_injury_count as string,",
				"          pedestrian_death_count as string,",
				"          pedestrian_serious_injury_count as string,",
				"          motorcycle_death_count as string,",
				"          motorcycle_serious_injury_count as string,",
				"          other_death_count as string,",
				"          other_serious_injury_count as string,",
				"          onsys_fl as string,",
				"          private_dr_fl as string,",
				"          micromobility_serious_injury_count as string,",
				"          micromobility_death_count as string,",
				"          CRASH_DATE as string,",
				"          Crash_timestamp as string,",
				"          Is_deleted as string,",
				"          Is_temporary_record as string,",
				"          Law_enforcement_fatality_count as string,",
				"          Reported_street_prefix as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          Di_workflow_name as string,",
				"          created_dt as string,",
				"          pid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          CRASH_SK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     query: 'select NVL(MAX(CRASH_SK),0) as CRASH_SK  from Fact_crash',",
				"     format: 'query') ~> source2",
				"source1 select(mapColumn(",
				"          CRASH_ID,",
				"          tot_injry_cnt,",
				"          death_cnt,",
				"          motor_vehicle_death_count,",
				"          motor_vehicle_serious_injury_count,",
				"          bicycle_death_count,",
				"          bicycle_serious_injury_count,",
				"          pedestrian_death_count,",
				"          pedestrian_serious_injury_count,",
				"          motorcycle_death_count,",
				"          motorcycle_serious_injury_count,",
				"          other_death_count,",
				"          other_serious_injury_count,",
				"          micromobility_serious_injury_count,",
				"          micromobility_death_count",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(DI_Created_dt = currentTimestamp(),",
				"          total_injury_cnt = tot_injry_cnt + other_serious_injury_count +micromobility_serious_injury_count,",
				"          total_fatal_cnt = death_cnt +other_death_count+micromobility_death_count,",
				"          Motor_injr_cnt = motor_vehicle_serious_injury_count+bicycle_serious_injury_count+motorcycle_serious_injury_count,",
				"          pid = \"pipiddp\") ~> derivedColumn1"
			]
		}
	}
}