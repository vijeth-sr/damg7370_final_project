{
	"name": "chicago_crash_fact_load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "stg_chicago_v2",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "stg_crash_fact",
						"type": "DatasetReference"
					},
					"name": "sourceFactCrash"
				},
				{
					"dataset": {
						"referenceName": "stg_address_dim",
						"type": "DatasetReference"
					},
					"name": "sourceAddressDim"
				},
				{
					"dataset": {
						"referenceName": "snowflakeDimDate",
						"type": "DatasetReference"
					},
					"name": "sourceDateDim"
				},
				{
					"name": "source2"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select2"
				},
				{
					"name": "union1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "select3"
				},
				{
					"name": "lookup2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CRASH_RECORD_ID as string,",
				"          CRASH_DATE as string,",
				"          CRASH_TIME as string,",
				"          PRIM_CONTRIBUTORY_CAUSE as string,",
				"          SEC_CONTRIBUTORY_CAUSE as string,",
				"          STREET_NAME as string,",
				"          INJURIES_TOTAL as string,",
				"          INJURIES_FATAL as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          CONTRIBUTORY_FACTOR as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_SOURCE_NAME as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          CRASH_SK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     query: 'select NVL(MAX(CRASH_SK),0) as CRASH_SK  from Fact_crash',",
				"     format: 'query') ~> sourceFactCrash",
				"source(output(",
				"          ADDRESS_SK as string,",
				"          STREET_NAME as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          DI_WORKFLOW_NAME as string,",
				"          DI_CREATED_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceAddressDim",
				"source(output(",
				"          DATE_SK as string,",
				"          DATE as string,",
				"          DATE_IN_WORDS as string,",
				"          DAY_OF_MONTH as string,",
				"          MONTH as string,",
				"          MONTH_OF_YEAR as string,",
				"          YEAR as string,",
				"          DAY_OF_WEEK as string,",
				"          SEASON as string,",
				"          WEEKEND_INDICATOR as string,",
				"          DI_CREATED_DT as string,",
				"          DI_WORKFLOW_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDateDim",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source2",
				"source1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(DI_Created_dt = currentTimestamp(),",
				"          total_injury_cnt = INJURIES_TOTAL,",
				"          total_fatal_cnt = INJURIES_FATAL,",
				"          Motor_fatal_cnt = -1,",
				"          pid = \"pipiddp\",",
				"          Motor_injr_cnt = -1,",
				"          pedstrian_fatal_cnt = -1,",
				"          pedstian_injr_cnt = -1,",
				"          CRASH_DATE = toDate(CRASH_DATE)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          CRASH_ID = CRASH_RECORD_ID,",
				"          total_injury_cnt,",
				"          total_fatal_cnt,",
				"          Motor_injr_cnt,",
				"          Motor_fatal_cnt,",
				"          pedstian_injr_cnt,",
				"          pedstrian_fatal_cnt,",
				"          CRASH_DATE,",
				"          DI_Created_dt,",
				"          pid,",
				"          latitude = LATITUDE,",
				"          longitude = LONGITUDE,",
				"          street_name = STREET_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2, sourceFactCrash union(byName: true)~> union1",
				"union1 keyGenerate(output(CRASH_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"lookup2, sourceAddressDim lookup(union1@latitude == source3@latitude",
				"     && union1@longitude == source3@longitude",
				"     && iif(\r",
				"    (isNull(rpt_block_num)) || (rpt_street_name == 'NOT REPORTED') , \r",
				"    street_name, \r",
				"        concat(trim(rpt_block_num), ' ', upper(trim(rpt_street_name) ))\r",
				") == {street name},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          CRASH_SK,",
				"          CRASH_ID,",
				"          total_injury_cnt,",
				"          total_fatal_cnt,",
				"          Motor_injr_cnt,",
				"          Motor_fatal_cnt,",
				"          pedstian_injr_cnt,",
				"          pedstrian_fatal_cnt,",
				"          CRASH_DATE,",
				"          DI_Created_dt = union1@DI_Created_dt,",
				"          pid,",
				"          Di_workflow_name = sourceAddressDim@Di_workflow_name,",
				"          ADDRESS_SK,",
				"          created_dt,",
				"          DATE_SK",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"surrogateKey1, sourceDateDim lookup(CRASH_DATE == toDate(DATE),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup2",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          CRASH_SK,",
				"          CRASH_ID,",
				"          TOTAL_INJURY_CNT = total_injury_cnt,",
				"          TOTAL_FATAL_CNT = total_fatal_cnt,",
				"          MOTOR_INJR_OR_KILLED_CNT = Motor_injr_cnt,",
				"          PEDSTRIAN_FATAL_CNT = pedstrian_fatal_cnt,",
				"          MOTOR_FATAL_CNT = Motor_fatal_cnt,",
				"          DI_CREATED_DT = created_dt,",
				"          PID = pid,",
				"          DATE_SK,",
				"          ADDRESS_SK",
				"     ),",
				"     format: 'table') ~> sink1"
			]
		}
	}
}