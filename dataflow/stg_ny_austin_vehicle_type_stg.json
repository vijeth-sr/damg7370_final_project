{
	"name": "stg_ny_austin_vehicle_type_stg",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ls_snowflake_stg",
						"type": "DatasetReference"
					},
					"name": "austinstg"
				},
				{
					"dataset": {
						"referenceName": "ds_Snowflake_ny_stg",
						"type": "DatasetReference"
					},
					"name": "nystg"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Snowflake_ny_ausin",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select4"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "select5"
				},
				{
					"name": "select6"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CRASH_ID as string,",
				"          CRASH_FATAL_FL as string,",
				"          CASE_ID as string,",
				"          STREET_ADDRESS as string,",
				"          CRASH_SPEED_LIMIT as string,",
				"          ROAD_CONSTR_ZONE_FL as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          CRASH_SEV_ID as string,",
				"          TOT_INJRY_CNT as string,",
				"          DEATH_CNT as string,",
				"          UNITS_INVOLVED as string,",
				"          VEHICLE_TYPE as string,",
				"          POINT as string,",
				"          MOTOR_VEHICLE_DEATH_COUNT as string,",
				"          MOTOR_VEHICLE_SERIOUS_INJURY_COUNT as string,",
				"          BICYCLE_DEATH_COUNT as string,",
				"          BICYCLE_SERIOUS_INJURY_COUNT as string,",
				"          PEDESTRIAN_DEATH_COUNT as string,",
				"          PEDESTRIAN_SERIOUS_INJURY_COUNT as string,",
				"          MOTORCYCLE_DEATH_COUNT as string,",
				"          MOTORCYCLE_SERIOUS_INJURY_COUNT as string,",
				"          OTHER_DEATH_COUNT as string,",
				"          OTHER_SERIOUS_INJURY_COUNT as string,",
				"          ONSYS_FL as string,",
				"          PRIVATE_DR_FL as string,",
				"          MICROMOBILITY_SERIOUS_INJURY_COUNT as string,",
				"          MICROMOBILITY_DEATH_COUNT as string,",
				"          CRASH_DATE as string,",
				"          CRASH_TIME as string,",
				"          CRASH_TIMESTAMP as string,",
				"          IS_DELETED as string,",
				"          IS_TEMPORARY_RECORD as string,",
				"          LAW_ENFORCEMENT_FATALITY_COUNT as string,",
				"          REPORTED_STREET_PREFIX as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_WORKFLOW_NAME as string,",
				"          CREATED_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     format: 'table') ~> austinstg",
				"source(output(",
				"          COLLISION_ID as string,",
				"          CRASH_DATE as string,",
				"          CRASH_TIME as string,",
				"          CRASH_DATETIME as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          STREET_NAME as string,",
				"          ZIP_CODE as string,",
				"          NUMBER_OF_PEDESTRIANS_KILLED as string,",
				"          NUMBER_OF_PEDESTRIANS_INJURED as string,",
				"          NUMBER_OF_PERSONS_INJURED as string,",
				"          NUMBER_OF_CYCLIST_INJURED as string,",
				"          NUMBER_OF_MOTORIST_INJURED as string,",
				"          NUMBER_OF_MOTORIST_KILLED as string,",
				"          NUMBER_OF_PERSONS_KILLED as string,",
				"          NUMBER_OF_CYCLIST_KILLED as string,",
				"          PEDESTRIAN_FLAG as string,",
				"          TOT_INJRY_CNT as string,",
				"          MOTORIST_INJRY_OR_KILLED_CNT as string,",
				"          TOT_FATAL_CNT as string,",
				"          CONTRIBUTING_FACTOR_VEHICLE as string,",
				"          VEHICLE_TYPE_CODE as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_WORKFLOW_FILENAME as string,",
				"          DI_CREATEDDATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> nystg",
				"select6, select5 union(byName: true,",
				"     partitionBy('roundRobin', 2))~> union1",
				"austinstg select(mapColumn(",
				"          CRASH_ID,",
				"          VEHICLE_TYPE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"nystg select(mapColumn(",
				"          CRASH_ID = COLLISION_ID,",
				"          UNITS_INVOLVED = VEHICLE_TYPE_CODE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 derive(Di_workflow_name = \"Motor_Vehicle_Collisions_-_Crashes_20241129\",",
				"          DI_source_name = \"stg_ny\") ~> derivedColumn2",
				"select2 derive(Di_workflow_name = \"Austin_Crash_Report_Data_-_Crash_Level_Records_20241129\",",
				"          DI_source_name = \"stg_austin\",",
				"          UNITS_INVOLVED = split(UNITS_INVOLVED, '&'),",
				"     partitionBy('hash', 1)) ~> derivedColumn3",
				"derivedColumn4 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"union1 derive(DI_created_dt = currentTimestamp(),",
				"          pid = \"PIDbyDhrumilPatel\") ~> derivedColumn4",
				"derivedColumn2 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"derivedColumn3 select(mapColumn(",
				"          CRASH_ID,",
				"          UUNITS_INVOLVED = VEHICLE_TYPE,",
				"          Di_workflow_name,",
				"          DI_source_name,",
				"          UNITS_INVOLVED",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CRASH_ID as string,",
				"          UNITS_INVOLVED as string,",
				"          DI_CREATEDDATE as string,",
				"          DI_WORKFLOWFILENAME as string,",
				"          DI_SOURCENAME as string,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CRASH_ID,",
				"          UNITS_INVOLVED = units_involved,",
				"          DI_CREATEDDATE = DI_created_dt,",
				"          DI_WORKFLOWFILENAME = Di_workflow_name,",
				"          DI_SOURCENAME = DI_source_name,",
				"          PID = pid",
				"     )) ~> sink1"
			]
		}
	}
}