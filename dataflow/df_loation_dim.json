{
	"name": "df_loation_dim",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AUSTIN_V2_STG",
						"type": "DatasetReference"
					},
					"name": "sourceslocation"
				},
				{
					"dataset": {
						"referenceName": "LOCATION_DIM_SNOWFLAKE",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "LOCATION_DIM_SNOWFLAKE",
						"type": "DatasetReference"
					},
					"name": "sinkoplocation"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select3"
				},
				{
					"name": "derivedcolumn"
				},
				{
					"name": "select5"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JObID as string (\"1\")",
				"}",
				"source(output(",
				"          CRASH_ID as string,",
				"          CRASH_FATAL_FL as string,",
				"          CASE_ID as string,",
				"          STREET_ADDRESS as string,",
				"          CRASH_SPEED_LIMIT as decimal(38,0),",
				"          ROAD_CONSTR_ZONE_FL as string,",
				"          LATITUDE as decimal(10,7),",
				"          LONGITUDE as decimal(10,7),",
				"          CRASH_SEV_ID as decimal(38,0),",
				"          TOT_INJRY_CNT as decimal(38,0),",
				"          DEATH_CNT as decimal(38,0),",
				"          UNITS_INVOLVED as string,",
				"          VEHICLE_TYPE as string,",
				"          POINT as string,",
				"          MOTOR_VEHICLE_DEATH_COUNT as decimal(38,0),",
				"          MOTOR_VEHICLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          BICYCLE_DEATH_COUNT as decimal(38,0),",
				"          BICYCLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          PEDESTRIAN_DEATH_COUNT as decimal(38,0),",
				"          PEDESTRIAN_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          MOTORCYCLE_DEATH_COUNT as decimal(38,0),",
				"          MOTORCYCLE_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          OTHER_DEATH_COUNT as decimal(38,0),",
				"          OTHER_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          ONSYS_FL as string,",
				"          PRIVATE_DR_FL as string,",
				"          MICROMOBILITY_SERIOUS_INJURY_COUNT as decimal(38,0),",
				"          MICROMOBILITY_DEATH_COUNT as decimal(38,0),",
				"          CRASH_DATE as string,",
				"          CRASH_TIME as string,",
				"          CRASH_TIMESTAMP as timestamp,",
				"          IS_DELETED as string,",
				"          IS_TEMPORARY_RECORD as string,",
				"          LAW_ENFORCEMENT_FATALITY_COUNT as decimal(38,0),",
				"          REPORTED_STREET_PREFIX as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          DI_WORKFLOW_NAME as string,",
				"          CREATED_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     format: 'table') ~> sourceslocation",
				"source(output(",
				"          ADDRESS_SK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     query: 'select NVL(MAX(address_sk),0) as address_sk  from DIM_address',",
				"     format: 'query') ~> source1",
				"select3, source1 union(byName: true)~> union1",
				"union1 keyGenerate(output(ADDRESS_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(created_dt = currentUTC(),",
				"          pid = \"dEbeh32ERR45TFdbss\") ~> derivedColumn1",
				"sourceslocation select(mapColumn(",
				"          CRASH_ID,",
				"          STREET_ADDRESS,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          CITY,",
				"          COUNTRY,",
				"          DI_WORKFLOW_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"derivedColumn1 derive(latitude = toFloat(LATITUDE),",
				"          longitude = toFloat(LONGITUDE),",
				"          ADDRESS_SK = iif(isNull(ADDRESS_SK),-1,toInteger(ADDRESS_SK))) ~> derivedcolumn",
				"derivedcolumn select(mapColumn(",
				"          LATITUDE = derivedcolumn@latitude,",
				"          LONGITUDE = derivedcolumn@longitude,",
				"          CITY,",
				"          COUNTRY,",
				"          Di_workflow_name = CRASH_ID,",
				"          ADDRESS_SK,",
				"          created_dt,",
				"          pid,",
				"          STREET_NAME = STREET_ADDRESS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ADDRESS_SK as string,",
				"          STREET_NAME as string,",
				"          CITY as string,",
				"          COUNTRY as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          DI_WORKFLOW_NAME as string,",
				"          DI_CREATED_DT as string,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          ADDRESS_SK,",
				"          STREET_NAME,",
				"          CITY,",
				"          COUNTRY,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          DI_WORKFLOW_NAME = Di_workflow_name,",
				"          DI_CREATED_DT = created_dt,",
				"          PID = pid",
				"     )) ~> sinkoplocation"
			]
		}
	}
}